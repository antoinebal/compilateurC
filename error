Starting parse
Entering state 0
Reading a token: Next token is token tINT ()
Shifting token tINT ()
Entering state 1
Reducing stack by rule 5 (line 29):
   $1 = token tINT ()
-> $$ = nterm Type ()
Stack now 0
Entering state 6
Reading a token: Next token is token tID ()
Shifting token tID ()
Entering state 9
Reading a token: Next token is token tPARO ()
Shifting token tPARO ()
Entering state 10
Reading a token: Next token is token tINT ()
Shifting token tINT ()
Entering state 11
Reading a token: Next token is token tID ()
Shifting token tID ()
Entering state 14
Reducing stack by rule 10 (line 31):
   $1 = token tINT ()
   $2 = token tID ()
-> $$ = nterm Argument ()
Stack now 0 6 9 10
Entering state 13
Reading a token: Next token is token tPARF ()
Reducing stack by rule 8 (line 30):
   $1 = nterm Argument ()
-> $$ = nterm Arguments ()
Stack now 0 6 9 10
Entering state 12
Next token is token tPARF ()
Shifting token tPARF ()
Entering state 15
Reading a token: Next token is token tACCO ()
Shifting token tACCO ()
Entering state 17
Reading a token: Next token is token tACCF ()
Reducing stack by rule 13 (line 34):
-> $$ = nterm Declarations ()
Stack now 0 6 9 10 12 15 17
Entering state 21
Next token is token tACCF ()
Reducing stack by rule 17 (line 36):
-> $$ = nterm Actions ()
Stack now 0 6 9 10 12 15 17 21
Entering state 28
Next token is token tACCF ()
Shifting token tACCF ()
Entering state 40
Reducing stack by rule 11 (line 33):
   $1 = token tACCO ()
   $2 = nterm Declarations ()
   $3 = nterm Actions ()
   $4 = token tACCF ()
-> $$ = nterm BodyFonction ()
Stack now 0 6 9 10 12 15
Entering state 18
Reducing stack by rule 4 (line 28):
   $1 = nterm Type ()
   $2 = token tID ()
   $3 = token tPARO ()
   $4 = nterm Arguments ()
   $5 = token tPARF ()
   $6 = nterm BodyFonction ()
-> $$ = nterm Fonction ()
Stack now 0
Entering state 5
Reading a token: Next token is token tVOID ()
Shifting token tVOID ()
Entering state 2
Reducing stack by rule 6 (line 29):
   $1 = token tVOID ()
-> $$ = nterm Type ()
Stack now 0 5
Entering state 6
Reading a token: Next token is token tID ()
Shifting token tID ()
Entering state 9
Reading a token: Next token is token tPARO ()
Shifting token tPARO ()
Entering state 10
Reading a token: Next token is token tPARF ()
Reducing stack by rule 9 (line 30):
-> $$ = nterm Arguments ()
Stack now 0 5 6 9 10
Entering state 12
Next token is token tPARF ()
Shifting token tPARF ()
Entering state 15
Reading a token: Next token is token tACCO ()
Shifting token tACCO ()
Entering state 17
Reading a token: Next token is token tINT ()
Shifting token tINT ()
Entering state 20
Reading a token: Next token is token tID ()
Shifting token tID ()
Entering state 23
Reading a token: Next token is token tPV ()
Shifting token tPV ()
Entering state 36
Reducing stack by rule 15 (line 35):
   $1 = token tINT ()
   $2 = token tID ()
   $3 = token tPV ()
-> $$ = nterm Declaration ()
Stack now 0 5 6 9 10 12 15 17
Entering state 22
Reading a token: Next token is token tINT ()
Shifting token tINT ()
Entering state 20
Reading a token: Next token is token tID ()
Shifting token tID ()
Entering state 23
Reading a token: Next token is token tPV ()
Shifting token tPV ()
Entering state 36
Reducing stack by rule 15 (line 35):
   $1 = token tINT ()
   $2 = token tID ()
   $3 = token tPV ()
-> $$ = nterm Declaration ()
Stack now 0 5 6 9 10 12 15 17 22
Entering state 22
Reading a token: Next token is token tID ()
Reducing stack by rule 13 (line 34):
-> $$ = nterm Declarations ()
Stack now 0 5 6 9 10 12 15 17 22 22
Entering state 35
Reducing stack by rule 14 (line 34):
   $1 = nterm Declaration ()
   $2 = nterm Declarations ()
-> $$ = nterm Declarations ()
Stack now 0 5 6 9 10 12 15 17 22
Entering state 35
Reducing stack by rule 14 (line 34):
   $1 = nterm Declaration ()
   $2 = nterm Declarations ()
-> $$ = nterm Declarations ()
Stack now 0 5 6 9 10 12 15 17
Entering state 21
Next token is token tID ()
Shifting token tID ()
Entering state 27
Reading a token: Next token is token tAFFECT ()
Shifting token tAFFECT ()
Entering state 39
Reading a token: Next token is token tNB ()
Shifting token tNB ()
Entering state 45
Reducing stack by rule 31 (line 43):
   $1 = token tNB ()
-> $$ = nterm Grandeur ()
Stack now 0 5 6 9 10 12 15 17 21 27 39
Entering state 49
Reducing stack by rule 23 (line 41):
   $1 = nterm Grandeur ()
-> $$ = nterm Calcul ()
Stack now 0 5 6 9 10 12 15 17 21 27 39
Entering state 53
Reading a token: Next token is token tPV ()
Shifting token tPV ()
Entering state 67
Reducing stack by rule 22 (line 38):
   $1 = token tID ()
   $2 = token tAFFECT ()
   $3 = nterm Calcul ()
   $4 = token tPV ()
-> $$ = nterm Affectation ()
Stack now 0 5 6 9 10 12 15 17 21
Entering state 30
Reducing stack by rule 18 (line 37):
   $1 = nterm Affectation ()
-> $$ = nterm Action ()
Stack now 0 5 6 9 10 12 15 17 21
Entering state 29
Reading a token: Next token is token tIF ()
Shifting token tIF ()
Entering state 26
Reducing stack by rule 34 (line 47):
   $1 = token tIF ()
-> $$ = nterm Cle ()
Stack now 0 5 6 9 10 12 15 17 21 29
Entering state 32
Reading a token: Next token is token tPARO ()
Shifting token tPARO ()
Entering state 43
Reading a token: Next token is token tID ()
Shifting token tID ()
Entering state 46
Reading a token: Next token is token tEGAL ()
Reducing stack by rule 32 (line 43):
   $1 = token tID ()
-> $$ = nterm Grandeur ()
Stack now 0 5 6 9 10 12 15 17 21 29 32 43
Entering state 49
Reducing stack by rule 23 (line 41):
   $1 = nterm Grandeur ()
-> $$ = nterm Calcul ()
Stack now 0 5 6 9 10 12 15 17 21 29 32 43
Entering state 56
Next token is token tEGAL ()
Shifting token tEGAL ()
Entering state 75
Reading a token: Next token is token tNB ()
Shifting token tNB ()
Entering state 45
Reducing stack by rule 31 (line 43):
   $1 = token tNB ()
-> $$ = nterm Grandeur ()
Stack now 0 5 6 9 10 12 15 17 21 29 32 43 56 75
Entering state 49
Reducing stack by rule 23 (line 41):
   $1 = nterm Grandeur ()
-> $$ = nterm Calcul ()
Stack now 0 5 6 9 10 12 15 17 21 29 32 43 56 75
Entering state 91
Reading a token: Next token is token tPARF ()
Reducing stack by rule 44 (line 52):
   $1 = nterm Calcul ()
   $2 = token tEGAL ()
   $3 = nterm Calcul ()
-> $$ = nterm Cond ()
Stack now 0 5 6 9 10 12 15 17 21 29 32 43
Entering state 58
Reducing stack by rule 37 (line 50):
   $1 = nterm Cond ()
-> $$ = nterm Condition ()
Stack now 0 5 6 9 10 12 15 17 21 29 32 43
Entering state 57
Next token is token tPARF ()
Shifting token tPARF ()
Entering state 76
Reading a token: Next token is token tACCO ()
Shifting token tACCO ()
Entering state 92
Reading a token: Next token is token tPARO ()
Reducing stack by rule 17 (line 36):
-> $$ = nterm Actions ()
Stack now 0 5 6 9 10 12 15 17 21 29 32 43 57 76 92
Entering state 94
Next token is token tPARO ()
syntax error
Error: popping nterm Actions ()
Stack now 0 5 6 9 10 12 15 17 21 29 32 43 57 76 92
Error: popping token tACCO ()
Stack now 0 5 6 9 10 12 15 17 21 29 32 43 57 76
Error: popping token tPARF ()
Stack now 0 5 6 9 10 12 15 17 21 29 32 43 57
Error: popping nterm Condition ()
Stack now 0 5 6 9 10 12 15 17 21 29 32 43
Error: popping token tPARO ()
Stack now 0 5 6 9 10 12 15 17 21 29 32
Error: popping nterm Cle ()
Stack now 0 5 6 9 10 12 15 17 21 29
Error: popping nterm Action ()
Stack now 0 5 6 9 10 12 15 17 21
Error: popping nterm Declarations ()
Stack now 0 5 6 9 10 12 15 17
Error: popping token tACCO ()
Stack now 0 5 6 9 10 12 15
Error: popping token tPARF ()
Stack now 0 5 6 9 10 12
Error: popping nterm Arguments ()
Stack now 0 5 6 9 10
Error: popping token tPARO ()
Stack now 0 5 6 9
Error: popping token tID ()
Stack now 0 5 6
Error: popping nterm Type ()
Stack now 0 5
Error: popping nterm Fonction ()
Stack now 0
Cleanup: discarding lookahead token tPARO ()
Stack now 0
